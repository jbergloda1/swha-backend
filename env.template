# ==============================================================================
# SWHA BACKEND ENVIRONMENT CONFIGURATION TEMPLATE
# ==============================================================================
# Copy this file to .env and update the values according to your setup
# cp env.template .env

# ==============================================================================
# SERVER CONFIGURATION
# ==============================================================================
HOST=127.0.0.1
PORT=8000
DEBUG=True

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================
# PostgreSQL Database URL
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://username:password@localhost:5432/swha_db

# Alternative for development (SQLite)
# DATABASE_URL=sqlite:///./swha_dev.db

# ==============================================================================
# SECURITY & AUTHENTICATION
# ==============================================================================
# Secret key for JWT tokens (generate a strong random key for production)
# You can generate one using: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-super-secret-key-change-this-in-production-min-32-chars

# JWT Algorithm
ALGORITHM=HS256

# Access token expiration time (in minutes)
ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==============================================================================
# FILE UPLOAD CONFIGURATION
# ==============================================================================
# Directory for uploaded files (relative to project root)
UPLOAD_DIR=app/static/uploads

# Maximum file size for uploads (in bytes)
# 100MB = 104857600 bytes
MAX_FILE_SIZE=104857600

# Video streaming chunk size (in bytes)
# 1MB = 1048576 bytes
CHUNK_SIZE=1048576

# ==============================================================================
# AI MODEL CONFIGURATION
# ==============================================================================
# Hugging Face model for Question Answering
QA_MODEL_NAME=deepset/roberta-base-squad2

# Model cache directory (optional)
# HF_CACHE_DIR=./models/cache

# Force CPU usage (set to true if you have GPU issues)
FORCE_CPU=False

# ==============================================================================
# EMAIL CONFIGURATION (Optional)
# ==============================================================================
# SMTP settings for email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_TLS=True
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password

# Email sender information
EMAIL_FROM=noreply@swha-backend.com
EMAIL_FROM_NAME=SWHA Backend

# ==============================================================================
# LOGGING CONFIGURATION
# ==============================================================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional)
# LOG_FILE=logs/swha-backend.log

# ==============================================================================
# CORS CONFIGURATION
# ==============================================================================
# Allowed origins for CORS (comma-separated)
# For development, you can use: http://localhost:3000,http://127.0.0.1:3000
# For production, specify your exact frontend domains
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# ==============================================================================
# REDIS CONFIGURATION (Optional - for caching)
# ==============================================================================
# Redis URL for caching (if you plan to use Redis)
# REDIS_URL=redis://localhost:6379/0

# ==============================================================================
# EXTERNAL SERVICES (Optional)
# ==============================================================================
# AWS S3 Configuration (if using S3 for file storage)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_BUCKET_NAME=your-s3-bucket
# AWS_REGION=us-east-1

# Google Cloud Storage (if using GCS)
# GCS_PROJECT_ID=your-project-id
# GCS_BUCKET_NAME=your-gcs-bucket
# GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account-key.json

# ==============================================================================
# MONITORING & ANALYTICS (Optional)
# ==============================================================================
# Sentry DSN for error tracking
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Google Analytics or other analytics
# ANALYTICS_ID=your-analytics-id

# ==============================================================================
# DEVELOPMENT SETTINGS
# ==============================================================================
# Enable/disable automatic database migrations
AUTO_MIGRATE=True

# Enable API documentation endpoints (/docs, /redoc)
ENABLE_DOCS=True

# Enable development tools
DEV_MODE=True

# ==============================================================================
# PRODUCTION SETTINGS
# ==============================================================================
# When deploying to production, make sure to:
# 1. Set DEBUG=False
# 2. Use a strong SECRET_KEY
# 3. Configure proper database credentials
# 4. Set appropriate CORS_ORIGINS
# 5. Use HTTPS
# 6. Set up proper logging
# 7. Configure environment-specific settings

# Example production values:
# DEBUG=False
# SECRET_KEY=very-long-random-generated-secret-key-for-production
# DATABASE_URL=postgresql://prod_user:secure_password@db.example.com:5432/swha_prod_db
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
# LOG_LEVEL=WARNING 

# ========================================
# S3 Configuration for Audio Storage
# ========================================

# Enable S3 storage for audio files (set to true to use S3)
USE_S3_STORAGE=false

# AWS Credentials (required if USE_S3_STORAGE=true)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key_here

# AWS Region where your S3 bucket is located
AWS_REGION=us-east-1

# S3 Bucket name for storing audio files
S3_BUCKET_NAME=swha-audio-bucket

# Presigned URL expiry time in seconds (default: 3600 = 1 hour)
S3_PRESIGNED_URL_EXPIRY=3600

# Example S3 setup:
# 1. Create an S3 bucket in AWS Console
# 2. Create IAM user with S3 permissions
# 3. Set USE_S3_STORAGE=true
# 4. Configure AWS credentials above
# 5. Restart the application 