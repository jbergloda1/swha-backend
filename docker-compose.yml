version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: swha-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: swha_db
      POSTGRES_USER: swha_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-swha_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"
    networks:
      - swha-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U swha_user -d swha_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: swha-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - swha-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: swha-app
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://swha_user:${DB_PASSWORD:-swha_password}@db:5432/swha_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      - HOST=0.0.0.0
      - PORT=8000
      - USE_S3_STORAGE=${USE_S3_STORAGE:-false}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-swha-audio-bucket}
      - S3_PRESIGNED_URL_EXPIRY=${S3_PRESIGNED_URL_EXPIRY:-3600}
    volumes:
      - ./app/static:/app/app/static
      - ./logs:/app/logs
      - huggingface_cache:/app/.cache/huggingface
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - swha-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: swha-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app/static:/var/www/static:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - swha-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  huggingface_cache:
    driver: local

networks:
  swha-network:
    driver: bridge 